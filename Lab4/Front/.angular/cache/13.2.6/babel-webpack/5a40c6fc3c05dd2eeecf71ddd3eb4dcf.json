{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as $ from 'jquery';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/svg.service\";\nimport * as i2 from \"../../services/point.service\";\nexport let SvgComponent = /*#__PURE__*/(() => {\n  class SvgComponent {\n    //Слежка за изменением радиусом и отрисовка точек при его изменении\n    constructor(service, sendService) {\n      this.service = service;\n      this.sendService = sendService;\n      this.message = [];\n      this.service.r.subscribe(value => {\n        this.rRadius = value;\n        this.SvgBuilder(value);\n        this.forDrawPoints();\n      });\n    }\n\n    ngOnInit() {\n      if (localStorage.getItem('isLogged') == 'true') {\n        this.forDrawPoints();\n      }\n    } //Отправка точки\n\n\n    getCoords(e) {\n      return __awaiter(this, void 0, void 0, function* () {\n        let radiusValue = this.rRadius;\n\n        if (radiusValue == null) {\n          //отправка ошибки в main\n          this.sendService.message.next([{\n            severity: 'error',\n            summary: 'error',\n            detail: 'Radius is undefined'\n          }]);\n        } else {\n          //Взятие координат\n          let offset = $('.block__svg').offset();\n          let relativeX = e.pageX - offset.left - 150;\n          let relativeY = e.pageY - offset.top - 150;\n          let x_val = (radiusValue * relativeX / 120).toFixed(3);\n          let y_val = (-1 * (radiusValue * relativeY) / 120).toFixed(3); //Форма для отправки\n\n          this.svgPoint = new FormGroup({\n            x: new FormControl(x_val, null),\n            y: new FormControl(y_val, null),\n            r: new FormControl(radiusValue, null),\n            owner: new FormControl(localStorage.getItem('userName'), null)\n          }); //Отправка формы\n\n          yield this.sendService.doPost(this.svgPoint.value);\n          yield this.forDrawPoints();\n        } //после отправки - перерисовка\n\n      });\n    } //Перерисовка SVG\n\n\n    SvgBuilder(radiusValue) {\n      if (radiusValue !== null) {\n        let half_value = String(Number(radiusValue) / 2);\n        document.querySelector('#radius-text-right').innerHTML = radiusValue;\n        document.querySelector('#radius-text-left').innerHTML = '-' + radiusValue;\n        document.querySelector('#radius-text-top').innerHTML = radiusValue;\n        document.querySelector('#radius-text-bottom').innerHTML = '-' + radiusValue;\n        document.querySelector('#radius-text-right-half').innerHTML = half_value;\n        document.querySelector('#radius-text-left-half').innerHTML = '-' + half_value;\n        document.querySelector('#radius-text-top-half').innerHTML = half_value;\n        document.querySelector('#radius-text-bottom-half').innerHTML = '-' + half_value;\n      } else {\n        document.querySelector('#radius-text-right').innerHTML = 'R';\n        document.querySelector('#radius-text-left').innerHTML = '-' + 'R';\n        document.querySelector('#radius-text-top').innerHTML = 'R';\n        document.querySelector('#radius-text-bottom').innerHTML = '-' + 'R';\n        document.querySelector('#radius-text-right-half').innerHTML = 'R/2';\n        document.querySelector('#radius-text-left-half').innerHTML = '-' + 'R/2';\n        document.querySelector('#radius-text-top-half').innerHTML = 'R/2';\n        document.querySelector('#radius-text-bottom-half').innerHTML = '-' + 'R/2';\n      }\n    }\n\n    forDrawPoints() {\n      return __awaiter(this, void 0, void 0, function* () {\n        $('circle.point').remove();\n        yield this.sendService.doGet().then(value => {\n          let length = value.length;\n          value = value.reverse();\n\n          if (length < 5) {\n            value.forEach(value1 => {\n              this.drawPoint(value1);\n            });\n          } else {\n            this.drawPoint(value[0]);\n            this.drawPoint(value[1]);\n            this.drawPoint(value[2]);\n            this.drawPoint(value[3]);\n            this.drawPoint(value[4]);\n          }\n        });\n      });\n    }\n\n    drawPoint(point) {\n      return __awaiter(this, void 0, void 0, function* () {\n        let radiusValue = this.rRadius;\n        let svg = document.querySelector('#svg_for_point');\n        let circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        let x_value_point;\n        let y_value_point;\n\n        if (radiusValue != null) {\n          x_value_point = 150 + point.x * 120 / radiusValue;\n          y_value_point = 150 + -1 * point.y * 120 / radiusValue;\n        } else {\n          x_value_point = 150 + point.x * 120 / point.r;\n          y_value_point = 150 + -1 * point.y * 120 / point.r;\n        }\n\n        circle.setAttribute('cx', String(x_value_point));\n        circle.setAttribute('cy', String(y_value_point));\n        circle.setAttribute('r', '5');\n        circle.setAttribute('stroke', 'black');\n        circle.setAttribute('class', 'point');\n\n        if (point.hit) {\n          circle.setAttribute('fill', 'green');\n        } else {\n          circle.setAttribute('fill', 'red');\n        }\n\n        yield svg.appendChild(circle);\n      });\n    }\n\n  }\n\n  SvgComponent.ɵfac = function SvgComponent_Factory(t) {\n    return new (t || SvgComponent)(i0.ɵɵdirectiveInject(i1.SvgService), i0.ɵɵdirectiveInject(i2.PointService));\n  };\n\n  SvgComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SvgComponent,\n    selectors: [[\"app-svg\"]],\n    hostBindings: function SvgComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function SvgComponent_click_HostBindingHandler($event) {\n          return ctx.getCoords($event);\n        });\n      }\n    },\n    decls: 32,\n    vars: 0,\n    consts: [[\"width\", \"220\", \"height\", \"220\", \"xmlns\", \"http://www.w3.org/2000/svg\", 1, \"svg-graph\"], [\"x1\", \"10\", \"y1\", \"110\", \"x2\", \"210\", \"y2\", \"110\", \"stroke\", \"black\", 1, \"axis\"], [\"points\", \"210, 110 200, 105 200, 115\"], [\"x1\", \"110\", \"y1\", \"10\", \"x2\", \"110\", \"y2\", \"210\", \"stroke\", \"black\", 1, \"axis\"], [\"points\", \"110, 10 105, 20 115, 20\"], [\"points\", \"176,110 110,110 110,143\", \"fill\", \"blue\", \"fill-opacity\", \"0.5\", \"stroke\", \"darkblue\", \"stroke-opacity\", \"1\", 1, \"svg-figure\", \"triangle-figure\"], [\"points\", \"110 ,176 110,110 43,110 43, 176\", \"fill\", \"green\", \"fill-opacity\", \"0.5\", \"stroke\", \"darkgreen\", \"stroke-opacity\", \"1\", 1, \"svg-figure\", \"rectangle-figure\"], [\"d\", \"M 110 43 A 69 69 0 0 0 43 110 L 110 110 Z\", \"fill\", \"yellow\", \"fill-opacity\", \"0.5\", \"stroke\", \"#CCCC00\", \"stroke-opacity\", \"1\", 1, \"svg-figure\", \"circle-figure\"], [\"x1\", \"43\", \"x2\", \"43\", \"y1\", \"105\", \"y2\", \"115\", \"stroke\", \"black\", 1, \"coordinate-line\"], [\"x\", \"33\", \"y\", \"100\", \"font-size\", \"14\", 1, \"coordinate-text\", \"coordinate-text_minus-Rx\"], [\"x1\", \"76\", \"x2\", \"76\", \"y1\", \"105\", \"y2\", \"115\", \"stroke\", \"black\", 1, \"coordinate-line\"], [\"x\", \"66\", \"y\", \"100\", \"font-size\", \"14\", 1, \"coordinate-text\", \"coordinate-text_minus-half-Rx\"], [\"x1\", \"143\", \"x2\", \"143\", \"y1\", \"105\", \"y2\", \"115\", \"stroke\", \"black\", 1, \"coordinate-line\"], [\"x\", \"138\", \"y\", \"100\", \"font-size\", \"14\", 1, \"coordinate-text\", \"coordinate-text_plus-half-Rx\"], [\"x1\", \"176\", \"x2\", \"176\", \"y1\", \"105\", \"y2\", \"115\", \"stroke\", \"black\", 1, \"coordinate-line\"], [\"x\", \"171\", \"y\", \"100\", \"font-size\", \"14\", 1, \"coordinate-text\", \"coordinate-text_plus-Rx\"], [\"x1\", \"105\", \"y1\", \"176\", \"x2\", \"115\", \"y2\", \"176\", \"stroke\", \"black\", 1, \"coordinate-line\"], [\"x\", \"120\", \"y\", \"181\", \"font-size\", \"14\", 1, \"coordinate-text\", \"coordinate-text_minus-Ry\"], [\"x1\", \"105\", \"y1\", \"143\", \"x2\", \"115\", \"y2\", \"143\", \"stroke\", \"black\", 1, \"coordinate-line\"], [\"x\", \"120\", \"y\", \"148\", \"font-size\", \"14\", 1, \"coordinate-text\", \"coordinate-text_minus-half-Ry\"], [\"x1\", \"105\", \"y1\", \"76\", \"x2\", \"115\", \"y2\", \"76\", \"stroke\", \"black\", 1, \"coordinate-line\"], [\"x\", \"120\", \"y\", \"81\", \"font-size\", \"14\", 1, \"coordinate-text\", \"coordinate-text_plus-half-Ry\"], [\"x1\", \"105\", \"y1\", \"43\", \"x2\", \"115\", \"y2\", \"43\", \"stroke\", \"black\", 1, \"coordinate-line\"], [\"x\", \"120\", \"y\", \"48\", \"font-size\", \"14\", 1, \"coordinate-text\", \"coordinate-text_plus-Ry\"]],\n    template: function SvgComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(0, \"svg\", 0);\n        i0.ɵɵelement(1, \"line\", 1)(2, \"polygon\", 2)(3, \"line\", 3)(4, \"polygon\", 4)(5, \"polygon\", 5)(6, \"polygon\", 6)(7, \"path\", 7)(8, \"line\", 8);\n        i0.ɵɵelementStart(9, \"text\", 9);\n        i0.ɵɵtext(10, \" -R \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"line\", 10);\n        i0.ɵɵelementStart(12, \"text\", 11);\n        i0.ɵɵtext(13, \" -R/2 \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"line\", 12);\n        i0.ɵɵelementStart(15, \"text\", 13);\n        i0.ɵɵtext(16, \" R/2 \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"line\", 14);\n        i0.ɵɵelementStart(18, \"text\", 15);\n        i0.ɵɵtext(19, \" R \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"line\", 16);\n        i0.ɵɵelementStart(21, \"text\", 17);\n        i0.ɵɵtext(22, \"-R\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"line\", 18);\n        i0.ɵɵelementStart(24, \"text\", 19);\n        i0.ɵɵtext(25, \"-R/2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"line\", 20);\n        i0.ɵɵelementStart(27, \"text\", 21);\n        i0.ɵɵtext(28, \"R/2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"line\", 22);\n        i0.ɵɵelementStart(30, \"text\", 23);\n        i0.ɵɵtext(31, \"R\");\n        i0.ɵɵelementEnd()();\n      }\n    },\n    styles: [\"\"]\n  });\n  return SvgComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}