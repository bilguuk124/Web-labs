{"ast":null,"code":"import { MD5, enc } from 'crypto-js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./point.service\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(http, router, message) {\n      this.http = http;\n      this.router = router;\n      this.message = message;\n    }\n\n    doPost(user) {\n      user.password = MD5(user.password).toString(enc.Hex);\n      this.http.post('http://localhost:8080/Back-1.0-SNAPSHOT/user-controller/check-user', user, {\n        headers: {\n          'Content-Type': 'application/JSON'\n        }\n      }).subscribe(value => {\n        if (value == false) {\n          this.message.message.next([{\n            severity: 'error',\n            summary: 'error',\n            detail: 'There is no such user'\n          }]);\n        } else {\n          localStorage.setItem('isLogged', String(value));\n          localStorage.setItem('userName', user.login);\n          console.log(localStorage.getItem('userName'));\n          this.router.navigate(['main']);\n        }\n      });\n    }\n\n    doReg(user) {\n      user.password = MD5(user.password).toString(enc.Hex);\n      this.http.post('http://localhost:8080/Back-1.0-SNAPSHOT/user-controller/add-user', user).subscribe(value => {\n        localStorage.setItem('isLogged', String(value));\n\n        if (value == false) {\n          this.message.message.next([{\n            severity: 'error',\n            summary: 'error',\n            detail: 'This user already exists'\n          }]);\n        } else {\n          this.message.message.next([{\n            severity: 'success',\n            summary: 'success',\n            detail: 'User is created'\n          }]);\n        }\n      });\n    }\n\n  }\n\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.PointService));\n  };\n\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module"}